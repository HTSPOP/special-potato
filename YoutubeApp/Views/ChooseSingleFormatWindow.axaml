<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="using:YoutubeApp.ViewModels"
        xmlns:local="using:YoutubeApp"
        xmlns:valueConverters="clr-namespace:YoutubeApp.ValueConverters"
        xmlns:models="clr-namespace:YoutubeApp.Models"
        mc:Ignorable="d" d:DesignWidth="740" d:DesignHeight="500"
        MinWidth="600" MinHeight="300"
        Width="740" Height="500"
        x:Class="YoutubeApp.Views.ChooseSingleFormatWindow"
        x:DataType="vm:ChooseSingleFormatWindowViewModel"
        x:CompileBindings="True"
        d:DataContext="{x:Static local:DesignViewModels.ChooseSingleFormatWindow}"
        Title="Choose Format"
        Icon="/Assets/app-logo.ico"
        WindowStartupLocation="CenterOwner">

    <Window.Resources>
        <valueConverters:LongFilesizeConverter x:Key="LongFilesizeConverter" />
    </Window.Resources>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" IsVisible="{Binding NoVariant}" Padding="0 0 0 10" Background="Transparent"
                   Foreground="Orange" FontSize="15">
            The previously selected variant is no longer available.<LineBreak />
            This may be temporary. Try refreshing again or choose another variant.
        </TextBlock>

        <!--Variants List-->
        <Grid Grid.Row="1" RowDefinitions="Auto,*">
            <!--Header-->
            <Grid Grid.Row="0" Margin="10 0 10 6">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="3*" />
                    <ColumnDefinition Width="3*" />
                    <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="Video Codec" />
                <TextBlock Grid.Column="1" Text="Width" />
                <TextBlock Grid.Column="2" Text="Height" />
                <TextBlock Grid.Column="3" Text="Fps" />
                <TextBlock Grid.Column="4" Text="Audio Codec" />
                <TextBlock Grid.Column="5" Text="Audio Bitrate" />
                <TextBlock Grid.Column="6" Text="Filesize" />
            </Grid>

            <!--Items-->
            <ListBox Grid.Row="1" ItemsSource="{Binding Variants}" Selection="{Binding Selection}">
                <ListBox.Styles>
                    <Styles>
                        <Style Selector="ListBoxItem">
                            <Setter Property="Background" Value="{Binding (models:VariantItem).Color}" />
                            <Setter Property="ToolTip.Tip" Value="{Binding (models:VariantItem).Description}" />
                        </Style>
                    </Styles>
                </ListBox.Styles>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*" />
                                <ColumnDefinition Width="2*" />
                                <ColumnDefinition Width="2*" />
                                <ColumnDefinition Width="2*" />
                                <ColumnDefinition Width="3*" />
                                <ColumnDefinition Width="3*" />
                                <ColumnDefinition Width="2*" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" Text="{Binding Variant.VCodec}" />
                            <TextBlock Grid.Column="1" Text="{Binding Variant.Width}" />
                            <TextBlock Grid.Column="2" Text="{Binding Variant.Height}" />
                            <TextBlock Grid.Column="3" Text="{Binding Variant.Fps}" />
                            <TextBlock Grid.Column="4" Text="{Binding Variant.ACodec}" />
                            <TextBlock Grid.Column="5" Text="{Binding Variant.Abr, StringFormat={}{0} kb/s}" />
                            <StackPanel Grid.Column="6" Orientation="Horizontal">
                                <TextBlock IsVisible="{Binding Variant.IsApproxFilesize}" Text="~" />
                                <TextBlock
                                    Text="{Binding Variant.Filesize, Converter={StaticResource LongFilesizeConverter}}" />
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>

        <Grid Grid.Row="2" ColumnDefinitions="*,Auto,*,Auto,Auto" Margin="0 10 0 0">
            <!-- Container Options -->
            <ItemsControl Grid.Column="1" ItemsSource="{Binding Containers}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" Spacing="16" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <RadioButton Content="{ReflectionBinding Value.Name}" GroupName="container"
                                     IsEnabled="{ReflectionBinding Value.IsAvailable}"
                                     IsChecked="{ReflectionBinding Value.IsChecked}"
                                     Command="{Binding $parent[Window].((vm:ChooseSingleFormatWindowViewModel)DataContext).ContainerChangedCommand}"
                                     CommandParameter="{ReflectionBinding Key}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <!--Action Buttons-->
            <Button Grid.Column="3" Content="Apply" Command="{Binding ApplyButtonClickedCommand}"
                    CommandParameter="{Binding $parent[Window]}" IsEnabled="{Binding ApplyButtonEnabled}" Width="80"
                    HorizontalContentAlignment="Center" Margin="0,0,6,0" Classes="Primary" />
            <Button Grid.Column="4" Content="Cancel" Command="{Binding $parent[Window].Close}" Width="80"
                    HorizontalContentAlignment="Center" />
        </Grid>
    </Grid>
</Window>